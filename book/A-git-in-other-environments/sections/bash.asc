=== Bash'te Git

(((bash)))(((tab completion, bash)))(((shell prompts, bash)))
Bir Bash kullanıcısıysanız, Git deneyiminizi daha kolay bir hale getirmek için shell'in bazı özelliklerini kullanabilirsiniz.
Git aslında, birkaç shell için eklentilerle birlikte gelir, ancak onları varsayılan olarak etkinleştirmez.

İlk olarak, Git kaynak kodundan `contrib/completion/git-completion.bash` dosyasının bir kopyasını almanız gerekir.
Onu ana dizininiz gibi uygun bir yere kopyalayın ve `.bashrc` dosyanıza şunu ekleyin:

[source,console]
-----
. ~/git-completion.bash
-----

Bu işlem tamamlandıktan sonra dizininizi Git reposuyla değiştirin ve şunu yazın:

[source,console]
----
$ git chec<tab>
----

…ve Bash, `git checkout` 'ı otomatik olarak tamamlar.
Bu, Git'in tüm alt komutları, komut satırı parametreleri ve uygun olduğunda uzak ve referans isimleriyle çalışır.

Ayrıca, mevcut dizinin Git reposu hakkında bilgi göstermek için özel bir belirteç oluşturmak da faydalı olabilir.
Bu istediğiniz kadar basit veya karmaşık olabilir, ancak genellikle çoğu insanın istediği birkaç temel bilgi vardır; bunlar arasında mevcut dal ve çalışma dizininin durumu bulunur.
Bu bilgileri belirtecinize eklemek için, sadece Git'in kaynak reposundan `contrib/completion/git-prompt.sh` dosyasını ana dizinize kopyalayın ve `.bashrc` dosyanıza şuna benzer bir şey ekleyin:

[source,console]
-----
. ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\w$(__git_ps1 " (%s)")\$ '
-----

`\w`, mevcut çalışma dizinini yazdırmak anlamına gelir, `\$` ise belirtecin `$` kısmını yazdırır ve `__git_ps1 " (%s)"` ise `git-prompt.sh` tarafından sağlanan bir işlevi biçimlendirme argümanı ile çağırır.
Şimdi herhangi bir Git denetimli projenin içindeyken bash belirteciniz şu şekilde görünecektir:

.Özelleştirilmiş `bash` belirteci.
image::images/git-bash.png[Özelleştirilmiş `bash` belirteci.]

Bu betiklerin her ikisi de yararlı belgelendirmelerle birlikte gelir; daha fazla bilgi için `git-completion.bash` ve `git-prompt.sh` dosyalarının içeriğine göz atın.
